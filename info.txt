!    = Factorial (A 1)
"    = 
#    = 
$    = 
%    = Modulo of two numbers (A 2)
&    = 
'    = 
(    = 
)    = 
*    = Multiplies two numbers (A 2)
+    = Adds two numbers (A 2)
,    = 
-    = Subtracts two numbers (A 2)
.    = 
/    = Divides two numbers (A 2)
0    = Numeric literal (A 0)
1    = Numeric literal (A 0)
2    = Numeric literal (A 0)
3    = Numeric literal (A 0)
4    = Numeric literal (A 0)
5    = Numeric literal (A 0)
6    = Numeric literal (A 0)
7    = Numeric literal (A 0)
8    = Numeric literal (A 0)
9    = Numeric literal (A 0)
:    = 
;    = 
<    = Decrements a number (A 1)
=    = 
>    = Increments a number (A 1)
?    = 
@    = 
A    = Truthify, 1 becomes 1 and the rest becomes 0 (A 1)
B    = 
C    = 
D    = Pops A, B and checks if B divides A (A 2)
E    = Convert a number from decimal to binary (A 1)
F    = 
G    = 
H    = 
I    = 
J    = 
K    = 
L    = 
M    = 
N    = Constant: None (A 0)
O    = 
P    = Computes the product of a list (A 1)
Q    = Pops A and B and checks if they are equal (A 2)
R    = 
S    = Computes the sum of a list (A 1)
T    = Replaced in the code by "10"
U    = Replaced in the code by "00"
V    = Replaced in the code by "11"
W    = Replaced in the code by "000"
X    = Replaced in the code by "01"
Y    = 
Z    = 
[    = 
\    = 
]    = 
^    = 
_    = Negate, 0 becomes 1 and everything else becomes 0 (A 1)
`    = 
a    = Pops x and pushes a(x) (A 1)
b    = Pushes a(n - 1) (A 0)
c    = Pushes a(n - 2) (A 0)
d    = Pushes a(n - 3) (A 0)
e    = Pops x, pushes a(n - x) (A 1)
f    = 
g    = 
h    = 
i    = 
j    = Get the largest divisor < n (A 1)
k    = 
l    = Length (A 1)
m    = Power function, pushes a ** b (A 2)
n    = Pushes n to the stack (A 0)
o    = Pops x, pushes 2 ** x (A 1)
p    = Checks if a number is prime (A 1)
q    = A000040, prime(n) (A 1)
r    = 
s    = Pop A, B and push B, A (A 2)
t    = 
u    = 
v    = 
w    = 
x    = Doubles a number (A 1)
y    = Triples a number (A 1)
z    = Quadruples a number (A 1)
{    = Pops A, pushes sorted A (A 1)
|    = 
}    = 
~    = 
€    = 
‚    = 
ƒ    = 
„    = 
…    = 
†    = 
‡    = 
ˆ    = 
‰    = 
Š    = 
‹    = 
Œ    = 
Ž    = 
‘    = 
’    = 
“    = 
”    = 
•    = 
–    = 
—    = 
˜    = 
™    = 
š    = 
›    = 
œ    = 
ž    = 
Ÿ    = 
¡    = 
¢    = 
£    = 
¤    = 
¥    = Pops A and pushes the delta's of A (A 1)
¦    = 
§    = 
¨    = 
©    = 
ª    = 
«    = Decrements a number twice (A 1)
¬    = 
®    = 
¯    = 
°    = 
±    = 
²    = Squares a number (A 1)
³    = 
´    = 
µ    = 
¶    = 
·    = 
¸    = 
¹    = 
º    = 
»    = Increments a number twice (A 1)
¼    = 
½    = 
¾    = 
¿    = 
À    = 
Á    = 
Â    = 
Ã    = 
Ä    = 
Å    = 
Æ    = 
Ç    = 
È    = 
É    = 
Ê    = 
Ë    = 
Ì    = 
Í    = 
Î    = 
Ï    = 
Ð    = 
Ñ    = 
Ò    = 
Ó    = 
Ô    = 
Õ    = 
Ö    = 
×    = 
Ø    = 
Ù    = 
Ú    = 
Û    = 
Ü    = 
Ý    = 
Þ    = Used for negative basecase (base 214 convert)
ß    = Used for multidigit basecases (base 214 convert)
à    = 
á    = 
â    = 
ã    = 
ä    = 
å    = 
æ    = 
ç    = 
è    = 
é    = 
ê    = 
ë    = 
ì    = 
í    = 
î    = 
ï    = 
ð    = 
ñ    = 
ò    = 
ó    = 
ô    = 
õ    = 
ö    = 
÷    = Integer divides two numbers (A 2)
ø    = 
ù    = 
ú    = 
û    = 
ü    = 
ý    = 
þ    = 
ÿ    = 


Arguments:

-n   = Find the first number after n satisfying each line of code
-N   = Get the nth number that satisfies each line of code
-o   = Add 1 to the input before calculating the function
-O   = Subtract 1 from the input before calculating the function
-T   = Checks if each condition is satisfied
